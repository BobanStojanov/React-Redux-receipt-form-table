{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task-Soursico\\\\Task-Boban-Stojanov\\\\src\\\\components\\\\NewReceipt\\\\ReceiptForm.js\";\nimport React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet ReceiptForm = _ref => {\n  let {\n    addReceipt,\n    fields: {\n      name,\n      source,\n      time\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: addReceipt,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receipt Name\",\n        value: name.value,\n        ...name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receipt Source\",\n        ...source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Receipt Time\",\n        ...time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReceiptForm;\nexport default reduxForm({\n  form: \"receipt\",\n  fields: [\"name\", \"source\", \"time\"]\n})(ReceiptForm); // Recipe name\n// - Recipe source (where we have obtained the recipe)\n// - List of ingredients\n// - Preparation time\n// - Preparation instructions.\n// import React from \"react\";\n// import { Field, FieldArray, reduxForm } from \"redux-form\";\n// const renderField = ({ input, label, type, meta: { touched, error } }) => (\n//   <div>\n//     <label>{label}</label>\n//     <div>\n//       <input {...input} type={type} placeholder={label} />\n//       {touched && error && <span>{error}</span>}\n//     </div>\n//   </div>\n// );\n// const renderReceipts = ({ fields, meta: { error, submitFailed } }) => (\n//   <ul>\n//     <li>\n//       <button type=\"button\" onClick={() => fields.push({})}>\n//         Add Receipt\n//       </button>\n//       {submitFailed && error && <span>{error}</span>}\n//     </li>\n//     {fields.map((receipt, index) => (\n//       <li key={index}>\n//         <button type=\"button\" onClick={() => fields.remove(index)}>\n//           Remove Receipt\n//         </button>\n//         <h4>Receipt #{index + 1}</h4>\n//         <Field\n//           name={`${receipt}.name`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Name\"\n//         />\n//         <Field\n//           name={`${receipt}.source`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Source\"\n//         />\n//         <Field\n//           name={`${receipt}.ingredients`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Ingredients\"\n//         />\n//         <Field\n//           name={`${receipt}.time`}\n//           type=\"time\"\n//           component={renderField}\n//           label=\"Preparation Time\"\n//         />\n//         <Field\n//           name={`${receipt}.instructions`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Preparation Instructions\"\n//         />\n//       </li>\n//     ))}\n//   </ul>\n// );\n// const ReceiptForm = (props) => {\n//   const { handleSubmit, pristine, reset, submitting } = props;\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <FieldArray name=\"receipts\" component={renderReceipts} />\n//       <div>\n//         <button type=\"submit\" disabled={submitting}>\n//           Submit\n//         </button>\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n//           Clear Values\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default reduxForm({\n//   form: \"ReceiptForm\",\n// })(ReceiptForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Task-Soursico/Task-Boban-Stojanov/src/components/NewReceipt/ReceiptForm.js"],"names":["React","reduxForm","ReceiptForm","addReceipt","fields","name","source","time","value","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,IAAIC,WAAW,GAAG,QAAoD;AAAA,MAAnD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB;AAAtB,GAAmD;AACpE,sBACE;AAAM,IAAA,QAAQ,EAAEJ,UAAhB;AAAA,4BACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,KAAK,EAAEE,IAAI,CAACG,KAHd;AAAA,WAIMH;AAJN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,gBAA/B;AAAA,WAAoDC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAYE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,cAA/B;AAAA,WAAkDC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;KAAIL,W;AAsBJ,eAAeD,SAAS,CAAC;AACvBQ,EAAAA,IAAI,EAAE,SADiB;AAEvBL,EAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,MAAnB;AAFe,CAAD,CAAT,CAGZF,WAHY,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\n\r\nlet ReceiptForm = ({ addReceipt, fields: { name, source, time } }) => {\r\n  return (\r\n    <form onSubmit={addReceipt}>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Receipt Name\"\r\n          value={name.value}\r\n          {...name}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Receipt Source\" {...source} />\r\n      </div>\r\n      <div>\r\n        <input type=\"time\" placeholder=\"Receipt Time\" {...time} />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"receipt\",\r\n  fields: [\"name\", \"source\", \"time\"],\r\n})(ReceiptForm);\r\n\r\n// Recipe name\r\n// - Recipe source (where we have obtained the recipe)\r\n// - List of ingredients\r\n// - Preparation time\r\n// - Preparation instructions.\r\n\r\n// import React from \"react\";\r\n// import { Field, FieldArray, reduxForm } from \"redux-form\";\r\n\r\n// const renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n//   <div>\r\n//     <label>{label}</label>\r\n//     <div>\r\n//       <input {...input} type={type} placeholder={label} />\r\n//       {touched && error && <span>{error}</span>}\r\n//     </div>\r\n//   </div>\r\n// );\r\n\r\n// const renderReceipts = ({ fields, meta: { error, submitFailed } }) => (\r\n//   <ul>\r\n//     <li>\r\n//       <button type=\"button\" onClick={() => fields.push({})}>\r\n//         Add Receipt\r\n//       </button>\r\n//       {submitFailed && error && <span>{error}</span>}\r\n//     </li>\r\n//     {fields.map((receipt, index) => (\r\n//       <li key={index}>\r\n//         <button type=\"button\" onClick={() => fields.remove(index)}>\r\n//           Remove Receipt\r\n//         </button>\r\n//         <h4>Receipt #{index + 1}</h4>\r\n//         <Field\r\n//           name={`${receipt}.name`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Name\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.source`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Source\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.ingredients`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Ingredients\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.time`}\r\n//           type=\"time\"\r\n//           component={renderField}\r\n//           label=\"Preparation Time\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.instructions`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Preparation Instructions\"\r\n//         />\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n\r\n// const ReceiptForm = (props) => {\r\n//   const { handleSubmit, pristine, reset, submitting } = props;\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <FieldArray name=\"receipts\" component={renderReceipts} />\r\n//       <div>\r\n//         <button type=\"submit\" disabled={submitting}>\r\n//           Submit\r\n//         </button>\r\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n//           Clear Values\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default reduxForm({\r\n//   form: \"ReceiptForm\",\r\n// })(ReceiptForm);\r\n"]},"metadata":{},"sourceType":"module"}