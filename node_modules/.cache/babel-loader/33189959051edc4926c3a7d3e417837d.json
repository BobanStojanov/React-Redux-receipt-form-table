{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task-Soursico\\\\Task-Boban-Stojanov\\\\src\\\\components\\\\NewReceipt\\\\ReceiptForm.js\";\n// import React from \"react\";\n// import { reduxForm } from \"redux-form\";\n// let ReceiptForm = ({ addReceipt, fields: [name, source, time] }) => {\n//   return (\n//     <form onSubmit={addReceipt}>\n//       <div>\n//         <input type=\"text\" placeholder=\"Receipt Name\" {...name} />\n//       </div>\n//       <div>\n//         <input type=\"text\" placeholder=\"Receipt Source\" {...source} />\n//       </div>\n//       <div>\n//         <input type=\"time\" placeholder=\"Receipt Time\" {...time} />\n//       </div>\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n// export default reduxForm({\n//   form: \"receipt\",\n//   fields: [\"name\", \"source\", \"time\"],\n// })(ReceiptForm);\n// Recipe name\n// - Recipe source (where we have obtained the recipe)\n// - List of ingredients\n// - Preparation time\n// - Preparation instructions.\nimport React from \"react\";\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderField = _ref => {\n  let {\n    input,\n    label,\n    type,\n    meta: {\n      touched,\n      error\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n        type: type,\n        placeholder: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\nconst renderReceipts = _ref2 => {\n  let {\n    fields,\n    meta: {\n      error,\n      submitFailed\n    }\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fields.push({}),\n        children: \"Add Receipt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), submitFailed && error && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), fields.map((receipt, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fields.remove(index),\n        children: \"Remove Receipt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Receipt #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: `${receipt}.name`,\n        type: \"text\",\n        component: renderField,\n        label: \"Receipt Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: `${receipt}.source`,\n        type: \"text\",\n        component: renderField,\n        label: \"Receipt Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: `${receipt}.ingredient`,\n        type: \"text\",\n        component: renderField,\n        label: \"Receipt Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: `${receipt}.source`,\n        type: \"text\",\n        component: renderField,\n        label: \"Receipt Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: `${receipt}.source`,\n        type: \"text\",\n        component: renderField,\n        label: \"Receipt Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n};\n\nconst ReceiptForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FieldArray, {\n      name: \"receipts\",\n      component: renderReceipts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: submitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        disabled: pristine || submitting,\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReceiptForm;\nexport default reduxForm({\n  form: \"ReceiptForm\"\n})(ReceiptForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Task-Soursico/Task-Boban-Stojanov/src/components/NewReceipt/ReceiptForm.js"],"names":["React","Field","FieldArray","reduxForm","renderField","input","label","type","meta","touched","error","renderReceipts","fields","submitFailed","push","map","receipt","index","remove","ReceiptForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["// import React from \"react\";\r\n// import { reduxForm } from \"redux-form\";\r\n\r\n// let ReceiptForm = ({ addReceipt, fields: [name, source, time] }) => {\r\n//   return (\r\n//     <form onSubmit={addReceipt}>\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Receipt Name\" {...name} />\r\n//       </div>\r\n//       <div>\r\n//         <input type=\"text\" placeholder=\"Receipt Source\" {...source} />\r\n//       </div>\r\n//       <div>\r\n//         <input type=\"time\" placeholder=\"Receipt Time\" {...time} />\r\n//       </div>\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default reduxForm({\r\n//   form: \"receipt\",\r\n//   fields: [\"name\", \"source\", \"time\"],\r\n// })(ReceiptForm);\r\n\r\n// Recipe name\r\n// - Recipe source (where we have obtained the recipe)\r\n// - List of ingredients\r\n// - Preparation time\r\n// - Preparation instructions.\r\n\r\nimport React from \"react\";\r\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label} />\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst renderReceipts = ({ fields, meta: { error, submitFailed } }) => (\r\n  <ul>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>\r\n        Add Receipt\r\n      </button>\r\n      {submitFailed && error && <span>{error}</span>}\r\n    </li>\r\n    {fields.map((receipt, index) => (\r\n      <li key={index}>\r\n        <button type=\"button\" onClick={() => fields.remove(index)}>\r\n          Remove Receipt\r\n        </button>\r\n        <h4>Receipt #{index + 1}</h4>\r\n        <Field\r\n          name={`${receipt}.name`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Receipt Name\"\r\n        />\r\n        <Field\r\n          name={`${receipt}.source`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Receipt Source\"\r\n        />\r\n        <Field\r\n          name={`${receipt}.ingredient`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Receipt Source\"\r\n        />\r\n        <Field\r\n          name={`${receipt}.source`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Receipt Source\"\r\n        />\r\n        <Field\r\n          name={`${receipt}.source`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Receipt Source\"\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst ReceiptForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FieldArray name=\"receipts\" component={renderReceipts} />\r\n      <div>\r\n        <button type=\"submit\" disabled={submitting}>\r\n          Submit\r\n        </button>\r\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n          Clear Values\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"ReceiptForm\",\r\n})(ReceiptForm);\r\n"]},"metadata":{},"sourceType":"module"}