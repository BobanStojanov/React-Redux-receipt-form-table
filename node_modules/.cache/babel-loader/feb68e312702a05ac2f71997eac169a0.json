{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task-Soursico\\\\Task-Boban-Stojanov\\\\src\\\\components\\\\NewReceipt\\\\ReceiptForm.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addReceipt } from \"../Redux/Actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet ReceiptForm = _ref => {\n  let {\n    dispatch\n  } = _ref;\n  let form;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: node => form = node,\n    onSubmit: event => {\n      event.preventDefault();\n      const receipt = {\n        id: new Date().getTime(),\n        name: form.name.value,\n        source: form.source.value,\n        ingridient: form.ingridient.value,\n        time: form.time.value,\n        instructions: form.instructions.value\n      };\n      dispatch(addReceipt(receipt));\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receipt Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Receipt Source\",\n        name: \"source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"ingridient\",\n        multiple: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Tomato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Potato\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Onion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        placeholder: \"Preparation Time\",\n        name: \"time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Preparation Instruction\",\n        name: \"instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ReceiptForm;\nexport default connect()(ReceiptForm); // import { connect } from \"react-redux\";\n// import { Field, reduxForm, formValueSelector } from \"redux-form\";\n// let SelectingFormValuesForm = (props) => {\n//   const {\n//     favoriteColorValue,\n//     fullName,\n//     handleSubmit,\n//     hasEmailValue,\n//     pristine,\n//     reset,\n//     submitting,\n//   } = props;\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <div>\n//         <label>First Name</label>\n//         <div>\n//           <Field\n//             name=\"firstName\"\n//             component=\"input\"\n//             type=\"text\"\n//             placeholder=\"First Name\"\n//           />\n//         </div>\n//       </div>\n//       <div>\n//         <label>Last Name</label>\n//         <div>\n//           <Field\n//             name=\"lastName\"\n//             component=\"input\"\n//             type=\"text\"\n//             placeholder=\"Last Name\"\n//           />\n//         </div>\n//       </div>\n//       <div>\n//         <label htmlFor=\"hasEmail\">Has Email?</label>\n//         <div>\n//           <Field\n//             name=\"hasEmail\"\n//             id=\"hasEmail\"\n//             component=\"input\"\n//             type=\"checkbox\"\n//           />\n//         </div>\n//       </div>\n//       {hasEmailValue && (\n//         <div>\n//           <label>Email</label>\n//           <div>\n//             <Field\n//               name=\"email\"\n//               component=\"input\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//             />\n//           </div>\n//         </div>\n//       )}\n//       <div>\n//         <label>Favorite Color</label>\n//         <div>\n//           <Field name=\"favoriteColor\" component=\"select\">\n//             <option />\n//             <option value=\"#ff0000\">Red</option>\n//             <option value=\"#00ff00\">Green</option>\n//             <option value=\"#0000ff\">Blue</option>\n//           </Field>\n//         </div>\n//       </div>\n//       {favoriteColorValue && (\n//         <div\n//           style={{\n//             height: 80,\n//             width: 200,\n//             margin: \"10px auto\",\n//             backgroundColor: favoriteColorValue,\n//           }}\n//         />\n//       )}\n//       <div>\n//         <button type=\"submit\" disabled={pristine || submitting}>\n//           Submit {fullName}\n//         </button>\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n//           Clear Values\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n// // The order of the decoration does not matter.\n// // Decorate with redux-form\n// SelectingFormValuesForm = reduxForm({\n//   form: \"selectingFormValues\", // a unique identifier for this form\n// })(SelectingFormValuesForm);\n// Recipe name\n// - Recipe source (where we have obtained the recipe)\n// - List of ingredients\n// - Preparation time\n// - Preparation instructions.\n// import React from \"react\";\n// import { Field, FieldArray, reduxForm } from \"redux-form\";\n// const renderField = ({ input, label, type, meta: { touched, error } }) => (\n//   <div>\n//     <label>{label}</label>\n//     <div>\n//       <input {...input} type={type} placeholder={label} />\n//       {touched && error && <span>{error}</span>}\n//     </div>\n//   </div>\n// );\n// const renderReceipts = ({ fields, meta: { error, submitFailed } }) => (\n//   <ul>\n//     <li>\n//       <button type=\"button\" onClick={() => fields.push({})}>\n//         Add Receipt\n//       </button>\n//       {submitFailed && error && <span>{error}</span>}\n//     </li>\n//     {fields.map((receipt, index) => (\n//       <li key={index}>\n//         <button type=\"button\" onClick={() => fields.remove(index)}>\n//           Remove Receipt\n//         </button>\n//         <h4>Receipt #{index + 1}</h4>\n//         <Field\n//           name={`${receipt}.name`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Name\"\n//         />\n//         <Field\n//           name={`${receipt}.source`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Source\"\n//         />\n//         <Field\n//           name={`${receipt}.ingredients`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Receipt Ingredients\"\n//         />\n//         <Field\n//           name={`${receipt}.time`}\n//           type=\"time\"\n//           component={renderField}\n//           label=\"Preparation Time\"\n//         />\n//         <Field\n//           name={`${receipt}.instructions`}\n//           type=\"text\"\n//           component={renderField}\n//           label=\"Preparation Instructions\"\n//         />\n//       </li>\n//     ))}\n//   </ul>\n// );\n// const ReceiptForm = (props) => {\n//   const { handleSubmit, pristine, reset, submitting } = props;\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <FieldArray name=\"receipts\" component={renderReceipts} />\n//       <div>\n//         <button type=\"submit\" disabled={submitting}>\n//           Submit\n//         </button>\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n//           Clear Values\n//         </button>\n//       </div>\n//     </form>\n//   );\n// };\n// export default reduxForm({\n//   form: \"ReceiptForm\",\n// })(ReceiptForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Task-Soursico/Task-Boban-Stojanov/src/components/NewReceipt/ReceiptForm.js"],"names":["React","connect","addReceipt","ReceiptForm","dispatch","form","node","event","preventDefault","receipt","id","Date","getTime","name","value","source","ingridient","time","instructions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,IAAIC,WAAW,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClC,MAAIC,IAAJ;AACA,sBACE;AACE,IAAA,GAAG,EAAGC,IAAD,IAAWD,IAAI,GAAGC,IADzB;AAEE,IAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADU;AAEdC,QAAAA,IAAI,EAAER,IAAI,CAACQ,IAAL,CAAUC,KAFF;AAGdC,QAAAA,MAAM,EAAEV,IAAI,CAACU,MAAL,CAAYD,KAHN;AAIdE,QAAAA,UAAU,EAAEX,IAAI,CAACW,UAAL,CAAgBF,KAJd;AAKdG,QAAAA,IAAI,EAAEZ,IAAI,CAACY,IAAL,CAAUH,KALF;AAMdI,QAAAA,YAAY,EAAEb,IAAI,CAACa,YAAL,CAAkBJ;AANlB,OAAhB;AAQAV,MAAAA,QAAQ,CAACF,UAAU,CAACO,OAAD,CAAX,CAAR;AACD,KAbH;AAAA,4BAeE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,cAA/B;AAA8C,QAAA,IAAI,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,gBAA/B;AAAgD,QAAA,IAAI,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF,eAqBE;AAAA,6BACE;AAAQ,QAAA,IAAI,EAAC,YAAb;AAA0B,QAAA,QAAQ,MAAlC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF,eA4BE;AAAA,6BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AAAkD,QAAA,IAAI,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA5BF,eA+BE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yBAFd;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF,eAuCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CA7CD;;KAAIN,W;AA+CJ,eAAeF,OAAO,GAAGE,WAAH,CAAtB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addReceipt } from \"../Redux/Actions\";\r\n\r\nlet ReceiptForm = ({ dispatch }) => {\r\n  let form;\r\n  return (\r\n    <form\r\n      ref={(node) => (form = node)}\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        const receipt = {\r\n          id: new Date().getTime(),\r\n          name: form.name.value,\r\n          source: form.source.value,\r\n          ingridient: form.ingridient.value,\r\n          time: form.time.value,\r\n          instructions: form.instructions.value,\r\n        };\r\n        dispatch(addReceipt(receipt));\r\n      }}\r\n    >\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Receipt Name\" name=\"name\" />\r\n      </div>\r\n      <div>\r\n        <input type=\"text\" placeholder=\"Receipt Source\" name=\"source\" />\r\n      </div>\r\n      <div>\r\n        <select name=\"ingridient\" multiple>\r\n          <option>Tomato</option>\r\n          <option>Potato</option>\r\n          <option>Onion</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <input type=\"time\" placeholder=\"Preparation Time\" name=\"time\" />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Preparation Instruction\"\r\n          name=\"instructions\"\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default connect()(ReceiptForm);\r\n\r\n// import { connect } from \"react-redux\";\r\n// import { Field, reduxForm, formValueSelector } from \"redux-form\";\r\n\r\n// let SelectingFormValuesForm = (props) => {\r\n//   const {\r\n//     favoriteColorValue,\r\n//     fullName,\r\n//     handleSubmit,\r\n//     hasEmailValue,\r\n//     pristine,\r\n//     reset,\r\n//     submitting,\r\n//   } = props;\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <div>\r\n//         <label>First Name</label>\r\n//         <div>\r\n//           <Field\r\n//             name=\"firstName\"\r\n//             component=\"input\"\r\n//             type=\"text\"\r\n//             placeholder=\"First Name\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       <div>\r\n//         <label>Last Name</label>\r\n//         <div>\r\n//           <Field\r\n//             name=\"lastName\"\r\n//             component=\"input\"\r\n//             type=\"text\"\r\n//             placeholder=\"Last Name\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       <div>\r\n//         <label htmlFor=\"hasEmail\">Has Email?</label>\r\n//         <div>\r\n//           <Field\r\n//             name=\"hasEmail\"\r\n//             id=\"hasEmail\"\r\n//             component=\"input\"\r\n//             type=\"checkbox\"\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       {hasEmailValue && (\r\n//         <div>\r\n//           <label>Email</label>\r\n//           <div>\r\n//             <Field\r\n//               name=\"email\"\r\n//               component=\"input\"\r\n//               type=\"email\"\r\n//               placeholder=\"Email\"\r\n//             />\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       <div>\r\n//         <label>Favorite Color</label>\r\n//         <div>\r\n//           <Field name=\"favoriteColor\" component=\"select\">\r\n//             <option />\r\n//             <option value=\"#ff0000\">Red</option>\r\n//             <option value=\"#00ff00\">Green</option>\r\n//             <option value=\"#0000ff\">Blue</option>\r\n//           </Field>\r\n//         </div>\r\n//       </div>\r\n//       {favoriteColorValue && (\r\n//         <div\r\n//           style={{\r\n//             height: 80,\r\n//             width: 200,\r\n//             margin: \"10px auto\",\r\n//             backgroundColor: favoriteColorValue,\r\n//           }}\r\n//         />\r\n//       )}\r\n//       <div>\r\n//         <button type=\"submit\" disabled={pristine || submitting}>\r\n//           Submit {fullName}\r\n//         </button>\r\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n//           Clear Values\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// // The order of the decoration does not matter.\r\n\r\n// // Decorate with redux-form\r\n// SelectingFormValuesForm = reduxForm({\r\n//   form: \"selectingFormValues\", // a unique identifier for this form\r\n// })(SelectingFormValuesForm);\r\n\r\n// Recipe name\r\n// - Recipe source (where we have obtained the recipe)\r\n// - List of ingredients\r\n// - Preparation time\r\n// - Preparation instructions.\r\n\r\n// import React from \"react\";\r\n// import { Field, FieldArray, reduxForm } from \"redux-form\";\r\n\r\n// const renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n//   <div>\r\n//     <label>{label}</label>\r\n//     <div>\r\n//       <input {...input} type={type} placeholder={label} />\r\n//       {touched && error && <span>{error}</span>}\r\n//     </div>\r\n//   </div>\r\n// );\r\n\r\n// const renderReceipts = ({ fields, meta: { error, submitFailed } }) => (\r\n//   <ul>\r\n//     <li>\r\n//       <button type=\"button\" onClick={() => fields.push({})}>\r\n//         Add Receipt\r\n//       </button>\r\n//       {submitFailed && error && <span>{error}</span>}\r\n//     </li>\r\n//     {fields.map((receipt, index) => (\r\n//       <li key={index}>\r\n//         <button type=\"button\" onClick={() => fields.remove(index)}>\r\n//           Remove Receipt\r\n//         </button>\r\n//         <h4>Receipt #{index + 1}</h4>\r\n//         <Field\r\n//           name={`${receipt}.name`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Name\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.source`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Source\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.ingredients`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Receipt Ingredients\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.time`}\r\n//           type=\"time\"\r\n//           component={renderField}\r\n//           label=\"Preparation Time\"\r\n//         />\r\n//         <Field\r\n//           name={`${receipt}.instructions`}\r\n//           type=\"text\"\r\n//           component={renderField}\r\n//           label=\"Preparation Instructions\"\r\n//         />\r\n//       </li>\r\n//     ))}\r\n//   </ul>\r\n// );\r\n\r\n// const ReceiptForm = (props) => {\r\n//   const { handleSubmit, pristine, reset, submitting } = props;\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <FieldArray name=\"receipts\" component={renderReceipts} />\r\n//       <div>\r\n//         <button type=\"submit\" disabled={submitting}>\r\n//           Submit\r\n//         </button>\r\n//         <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\r\n//           Clear Values\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default reduxForm({\r\n//   form: \"ReceiptForm\",\r\n// })(ReceiptForm);\r\n"]},"metadata":{},"sourceType":"module"}