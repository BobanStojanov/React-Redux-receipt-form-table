{"ast":null,"code":"// import { createStore } from \"redux\";\n// const initialState = {\n//   inputValue: \"\",\n// };\n// const reducer = (state = initialState, action) => {\n//   console.log(\"reducer\", action);\n//   switch (action.type) {\n//     case \"INPUT_CHANGE\":\n//       return Object.assign({}, state, { inputValue: action.text });\n//     default:\n//       return state;\n//   }\n// };\n// const store = createStore(reducer);\n// export default store;\nimport { combineReducers } from \"redux\";\nimport { ADD_RECEIPT } from \"./Constants\";\nimport { reducer as formReducer } from \"redux-form\";\n\nconst mainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    receipts: [{}],\n    loadingReceipts: true,\n    addingReceipt: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_RECEIPTS:\n      return Object.assign({}, state, {\n        receipts: action.receipts,\n        loadingReceipts: false\n      });\n\n    case REQUEST_RECEIPTS:\n      return Object.assign({}, state, {\n        loadingReceipts: true\n      });\n\n    case START_RECEIPT_ADD:\n      return Object.assign({}, state, {\n        addingReceipt: true\n      });\n\n    case ADD_RECEIPT:\n      return Object.assign({}, state, {\n        addingReceipt: false,\n        receipts: [...state.receipts, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst reducer = combineReducers({\n  main: mainReducer,\n  form: formReducer\n});\nexport default reducer;","map":{"version":3,"sources":["C:/Users/User/Desktop/Task-Soursico/Task-Boban-Stojanov/src/components/Redux/reducer.js"],"names":["combineReducers","ADD_RECEIPT","reducer","formReducer","mainReducer","state","receipts","loadingReceipts","addingReceipt","action","type","RECEIVE_RECEIPTS","Object","assign","REQUEST_RECEIPTS","START_RECEIPT_ADD","payload","main","form"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;;AAEA,MAAMC,WAAW,GAAG,YAOf;AAAA,MANHC,KAMG,uEANK;AACNC,IAAAA,QAAQ,EAAE,CAAC,EAAD,CADJ;AAENC,IAAAA,eAAe,EAAE,IAFX;AAGNC,IAAAA,aAAa,EAAE;AAHT,GAML;AAAA,MADHC,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,gBAAL;AACE,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BC,QAAAA,QAAQ,EAAEG,MAAM,CAACH,QADa;AAE9BC,QAAAA,eAAe,EAAE;AAFa,OAAzB,CAAP;;AAIF,SAAKO,gBAAL;AACE,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BE,QAAAA,eAAe,EAAE;AADa,OAAzB,CAAP;;AAGF,SAAKQ,iBAAL;AACE,aAAOH,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BG,QAAAA,aAAa,EAAE;AADe,OAAzB,CAAP;;AAGF,SAAKP,WAAL;AACE,aAAOW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,KAAlB,EAAyB;AAC9BG,QAAAA,aAAa,EAAE,KADe;AAE9BF,QAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBG,MAAM,CAACO,OAA3B;AAFoB,OAAzB,CAAP;;AAIF;AACE,aAAOX,KAAP;AApBJ;AAsBD,CA9BD;;AAgCA,MAAMH,OAAO,GAAGF,eAAe,CAAC;AAC9BiB,EAAAA,IAAI,EAAEb,WADwB;AAE9Bc,EAAAA,IAAI,EAAEf;AAFwB,CAAD,CAA/B;AAKA,eAAeD,OAAf","sourcesContent":["// import { createStore } from \"redux\";\r\n\r\n// const initialState = {\r\n//   inputValue: \"\",\r\n// };\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//   console.log(\"reducer\", action);\r\n\r\n//   switch (action.type) {\r\n//     case \"INPUT_CHANGE\":\r\n//       return Object.assign({}, state, { inputValue: action.text });\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const store = createStore(reducer);\r\n\r\n// export default store;\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { ADD_RECEIPT } from \"./Constants\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nconst mainReducer = (\r\n  state = {\r\n    receipts: [{}],\r\n    loadingReceipts: true,\r\n    addingReceipt: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case RECEIVE_RECEIPTS:\r\n      return Object.assign({}, state, {\r\n        receipts: action.receipts,\r\n        loadingReceipts: false,\r\n      });\r\n    case REQUEST_RECEIPTS:\r\n      return Object.assign({}, state, {\r\n        loadingReceipts: true,\r\n      });\r\n    case START_RECEIPT_ADD:\r\n      return Object.assign({}, state, {\r\n        addingReceipt: true,\r\n      });\r\n    case ADD_RECEIPT:\r\n      return Object.assign({}, state, {\r\n        addingReceipt: false,\r\n        receipts: [...state.receipts, action.payload],\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst reducer = combineReducers({\r\n  main: mainReducer,\r\n  form: formReducer,\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}