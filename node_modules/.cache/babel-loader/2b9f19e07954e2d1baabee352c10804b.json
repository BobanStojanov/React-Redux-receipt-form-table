{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task-Soursico\\\\Task-Boban-Stojanov\\\\src\\\\components\\\\NewReceipt\\\\ReceiptTable.js\";\nimport React from \"react\";\nimport Table, { TableBody, TableCell, TableHead, TableRow } from \"material-ui/Table\";\nimport Paper from \"material-ui/Paper\";\nimport { getFormValues } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReceiptTable = _ref => {\n  let {\n    values = {\n      receipts: []\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Receipt Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Receipt Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Receipt Ingredients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Preparation Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Preparation Instruction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: values.receipts.map(n => {\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.ingredients\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: n.instructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, `${n.name}-${n.source}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c = ReceiptTable;\nexport default connect(state => ({\n  values: getFormValues(\"ReceiptForm\")(state)\n}))(ReceiptTable);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReceiptTable\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Task-Soursico/Task-Boban-Stojanov/src/components/NewReceipt/ReceiptTable.js"],"names":["React","Table","TableBody","TableCell","TableHead","TableRow","Paper","getFormValues","connect","ReceiptTable","values","receipts","map","n","name","source","ingredients","time","instructions","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IACEC,SADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,QAJF,QAKO,mBALP;AAMA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAAEC,IAAAA,MAAM,GAAG;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAAX,GAAD;AAAA,sBACnB,QAAC,KAAD;AAAA,2BACE,QAAC,KAAD;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,SAAD;AAAA,kBACGD,MAAM,CAACC,QAAP,CAAgBC,GAAhB,CAAqBC,CAAD,IAAO;AAC1B,8BACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA,wBAAYA,CAAC,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA,wBAAYD,CAAC,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA,wBAAYF,CAAC,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA,wBAAYH,CAAC,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAA,wBAAYJ,CAAC,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAAgB,GAAEL,CAAC,CAACC,IAAK,IAAGD,CAAC,CAACE,MAAO,EAArC;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADmB;AAAA,CAArB;;KAAMN,Y;AA6BN,eAAeD,OAAO,CAAEW,KAAD,KAAY;AACjCT,EAAAA,MAAM,EAAEH,aAAa,CAAC,aAAD,CAAb,CAA6BY,KAA7B;AADyB,CAAZ,CAAD,CAAP,CAEXV,YAFW,CAAf","sourcesContent":["import React from \"react\";\r\nimport Table, {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"material-ui/Table\";\r\nimport Paper from \"material-ui/Paper\";\r\nimport { getFormValues } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ReceiptTable = ({ values = { receipts: [] } }) => (\r\n  <Paper>\r\n    <Table>\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Receipt Name</TableCell>\r\n          <TableCell>Receipt Source</TableCell>\r\n          <TableCell>Receipt Ingredients</TableCell>\r\n          <TableCell>Preparation Time</TableCell>\r\n          <TableCell>Preparation Instruction</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {values.receipts.map((n) => {\r\n          return (\r\n            <TableRow key={`${n.name}-${n.source}`}>\r\n              <TableCell>{n.name}</TableCell>\r\n              <TableCell>{n.source}</TableCell>\r\n              <TableCell>{n.ingredients}</TableCell>\r\n              <TableCell>{n.time}</TableCell>\r\n              <TableCell>{n.instructions}</TableCell>\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableBody>\r\n    </Table>\r\n  </Paper>\r\n);\r\n\r\nexport default connect((state) => ({\r\n  values: getFormValues(\"ReceiptForm\")(state),\r\n}))(ReceiptTable);\r\n"]},"metadata":{},"sourceType":"module"}